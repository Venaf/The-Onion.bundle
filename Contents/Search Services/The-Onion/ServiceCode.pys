import re

BASE_URL = 'http://www.theonion.com'
SEARCH_URL = 'http://www.theonion.com/ajax/onn_search/%s/1/'

####################################################################################################

def Search(query):

  # Compute the URL and download the HTML
  url = SEARCH_URL % String.Quote(query)
  search_page = HTML.ElementFromURL(url, headers = {'X-Requested-With': 'XMLHttpRequest'})
  search_results = search_page.xpath("//li")
   
  # Create a container to hold the results
  c = ObjectContainer()
  for item in search_results:  
    try:

      # Extract the details from the page
      title = item.xpath(".//p[@class='title']//text()")[0]
      description = item.xpath(".//p[@class='teaser']//text()")[0].strip()
      thumb = item.xpath(".//img")[0].get('src')

      url = item.xpath(".//a")[0].get('href')
      if url.startswith("http") == False:
        url = BASE_URL + url

      # The duration should be in the form "(MINS:SECS)". We can therefore extract the minutes and
      # seconds separately using a regular expression.
      duration_text = item.xpath(".//p[@class='info']/text()")[0].strip()
      duration_details = re.match("\((?P<mins>[0-9]+):(?P<secs>[0-9]+)\)", duration_text).groupdict()
      mins = int(duration_details['mins'])
      secs = int(duration_details['secs'])
      duration = (mins * 60000) + (secs * 1000)
      
      c.add(VideoClipObject(
        url = url,
        title = title,
        thumb = thumb,
        summary = description,
        duration = duration
      ))

    except:
      Log.Exception("Exception adding video result")
      
  return c